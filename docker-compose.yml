services:
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30

  bootstrap:
    build:
      context: .
    image: st7ma784/superdarn_dhtworker:latest
    cap_add:
      - SYS_ADMIN
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    command: "sh -c 'python3 -u src/main.py --minio_url 10.48.163.59:9000'"
    develop:
      watch:
        - action: sync+restart
          path: ./src/
          target: /app/src/
    networks:
      - nginx_network
    #add a volume for debugging
    # volumes:
    # #This means if the code writes to /app/perf_results, it will be available on the host machine at ./perf_results
    #   - ./perf_results:/app/perf_results 
  node:
    restart:
      always
    build:
      context: .
    image: st7ma784/superdarn_dhtworker:latest
    cap_add:
      - SYS_ADMIN
      - PERFMON
      - SYS_PTRACE
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - bootstrap
    develop:
      watch:
        - action: sync+restart
          path: ./src/
          target: /app/src/
    deploy:
      replicas: 3
    command: "sh -c 'python3 -u src/main.py --bootstrap_node bootstrap:6501 --minio_url 10.48.163.59:9000'"
    networks:
      - nginx_network
  nginx:
    image: nginx:latest
    ports:
      - "8081:8081"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    develop:
      watch:
        - action: sync+restart
          path: ./nginx.conf
          target: /etc/nginx/nginx.conf

    depends_on:
      - node
    deploy:
      replicas: 1
    networks:
      - nginx_network


networks:
  nginx_network:
    driver: bridge